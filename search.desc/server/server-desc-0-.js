searchState.loadedDescShard("server", 0, "Auto-generate TLS certificate using Porkbun\nBase domain for function subdomains\nPath to the certs directory\nPath to the SledDB database directory\nReturns the argument unchanged.\nReturns the argument unchanged.\nPath to the functions directory containing uploaded shared …\nHTTP Address to listen on for redirects (e.g., 0.0.0.0:80)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAddress to listen on (e.g., 0.0.0.0:443)\nAddress for the RPC server (QUIC)\nPath to the TLS certificate file (PEM format)\nPath to the TLS private key file (PEM format)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpawn a background task that downloads new certificates …\nAdd a project to a user’s list\nAuthenticate and extract username from GitHub token in a …\nCheck if a user can upload more projects (limit is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the list of projects owned by a user\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemove a project from a user’s list\nEnsure libkvmserverguest is linked into the final binary. …\nFlush in-memory metrics to persistent DB and reset …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpawn a background task to periodically flush metrics to …\nSled tree name for function metadata\nImplementation of the FunctionService The FaastaServer …\nHelper function to create a service implementation with …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new FunctionServiceImpl Create a new …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")