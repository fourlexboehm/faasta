searchState.loadedDescShard("cargo_faasta", 0, "Build the function (and optionally deploy it)\nCustom styling for the CLI\nDeploys a project to the server\nInitialize a new project in the current directory\nInvokes a function with the specified name and argument\nList all functions deployed under the current GitHub …\nSet up GitHub authentication\nGet metrics for deployed functions\nCreate a new project in a new directory\nRun a function locally for testing\nUnpublish a function from the server\nOptional argument to pass to the function\nDeploy the function after building\nFormats the function URL based on the INVOKE_URL If …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFunction name to use (if different from package name)\nFunction name to use (if different from package name)\nGet the configuration directory\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if a host string is an IP address\nLoad the config file or create a new one\nMain entry point\nSkip browser OAuth flow and manually provide credentials\nName of the function to invoke\nName of the function to unpublish\nThe name of the package to create\nPath to the project to deploy\nPort to run the local server on\nFind a workspace root package if it exists; otherwise pick …\nSave the configuration\nServer address to deploy to (e.g., “faasta.xyz:4433”)\nServer address to deploy to (e.g., “faasta.xyz:4433”)\nServer address (e.g., “faasta.xyz:4433”)\nServer address (e.g., “faasta.xyz:4433”)\nSkip GitHub authentication\nGitHub token (only needed for manual login)\nGitHub username (only needed for manual login)\nExplicit path to WASM file (overrides automatic detection)\nExplicit path to WASM file (overrides automatic detection)\nReturns the argument unchanged.\nGet client ID from environment or use default\nGet client secret from environment or use default\nGets the GitHub username from the user’s profile\nCreate an OAuth client for GitHub\nGet the test mode status and credentials\nPerforms the GitHub OAuth flow and returns the username …\nCalls <code>U::from(self)</code>.\nStarts a local HTTP server to receive the OAuth redirect\nWaits for and processes the OAuth callback\nReplaces the line <code>name = &quot;whatever&quot;</code> inside <code>[package]</code> with …\nWrites the embedded Cargo.toml &amp; main.rs to disk, updating …\nCompare two file paths in a slightly more robust way. (On …")