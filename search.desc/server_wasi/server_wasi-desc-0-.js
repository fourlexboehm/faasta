searchState.loadedDescShard("server_wasi", 0, "Auto-generate TLS certificate using Let’s Encrypt\nBase domain for function subdomains\nPath to the certs directory\nPath to the SledDB database directory\nReturns the argument unchanged.\nPath to the functions directory\nHTTP Address to listen on for redirects (e.g., 0.0.0.0:80)\nCalls <code>U::from(self)</code>.\nEmail address for Let’s Encrypt\nUse Let’s Encrypt staging environment (for testing)\nAddress to listen on (e.g., 0.0.0.0:443)\nPath to the TLS certificate file (PEM format)\nPath to the TLS private key file (PEM format)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdd a project to a user’s list\nAuthenticate and extract username from GitHub token in a …\nCheck if a user can upload more projects (limit is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the list of projects owned by a user\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemove a project from a user’s list\nRuns the HTTP server that redirects HTTP requests to HTTPS\nRuns the HTTPS server\nFlush in-memory metrics to persistent DB and reset …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpawn a Tokio task to periodically flush metrics to DB …\nRuns the RPC server that handles QUIC connections\nConfigures and starts a QUIC server for RPC communication\nSled tree name for function metadata\nImplementation of the FunctionService The FaastaServer …\nHelper function to create a service implementation with …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new FunctionServiceImpl Create a new …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemove a function from the pre_cache")