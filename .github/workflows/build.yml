name: Build Faasta Components

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip2
      
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        
      - name: Build server-wasi (Linux)
        run: cargo build --release --package server-wasi
      
      - name: Build cargo-faasta CLI (Linux)
        run: cargo build --release --package cargo-faasta
      
      - name: Create output directory
        run: mkdir -p target/artifacts
      
      - name: Prepare artifacts
        run: |
          cp target/release/server-wasi target/artifacts/faasta-server-linux-x86_64
          cp target/release/cargo-faasta target/artifacts/cargo-faasta-linux-x86_64
      
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: faasta-linux-x86_64
          path: target/artifacts/
          retention-days: 7

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip2
      
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        
      - name: Build server-wasi (macOS)
        run: cargo build --release --package server-wasi
      
      - name: Build cargo-faasta CLI (macOS)
        run: cargo build --release --package cargo-faasta
      
      - name: Create output directory
        run: mkdir -p target/artifacts
      
      - name: Prepare artifacts
        run: |
          cp target/release/server-wasi target/artifacts/faasta-server-macos-x86_64
          cp target/release/cargo-faasta target/artifacts/cargo-faasta-macos-x86_64
      
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: faasta-macos-x86_64
          path: target/artifacts/
          retention-days: 7

  build-macos-arm:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip2
      
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        
      - name: Build server-wasi (macOS ARM)
        run: cargo build --release --package server-wasi
      
      - name: Build cargo-faasta CLI (macOS ARM)
        run: cargo build --release --package cargo-faasta
      
      - name: Create output directory
        run: mkdir -p target/artifacts
      
      - name: Prepare artifacts
        run: |
          cp target/release/server-wasi target/artifacts/faasta-server-macos-arm64
          cp target/release/cargo-faasta target/artifacts/cargo-faasta-macos-arm64
      
      - name: Upload macOS ARM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: faasta-macos-arm64
          path: target/artifacts/
          retention-days: 7

  create-release:
    needs: [build-linux, build-macos, build-macos-arm]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts
      
      - name: Create release directory
        run: mkdir -p release-artifacts
      
      - name: Prepare release artifacts
        run: |
          cp all-artifacts/faasta-linux-x86_64/* release-artifacts/
          cp all-artifacts/faasta-macos-x86_64/* release-artifacts/
          cp all-artifacts/faasta-macos-arm64/* release-artifacts/
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Faasta ${{ github.sha }}
          tag_name: build-${{ github.run_number }}
          draft: false
          prerelease: true
          files: release-artifacts/*